extensions {.sm}

syntax {
	keywords {
		Perl6-Keywords {
			my has sub does for while else elsif die multi enum
		}
	
		Expressions {
			make now method end return if otherwise when default loop given it its on
		}
	
		Keywords {
			be means is as also through from to takes new
		}
	
		Functions {
			say read print times list dictionary
		}
	
		Constants {
			true false empty self newline
		}
	
		Special-Keywords {
			And then
		}
		
		Word-Operators {
			and or not eq ne gt lt ge le isnt
		}
	}
	
	symbols {
		Operators {.,+-*/%<>=!?~^|&:}
		Wrappers {()[]{}}
	}
	
	numbers {
		Number {\y\d+(?:\.\d+)?\y}
	}
	
	strings {
		Double-Quoted {".+?"}
		Single-Quoted {'.+?'}
		Dictionary-Key {<.+?>}
	}
	
	regexes {
		Variable-Prefix {(\:\~)?(?:\$|\@|\%|\&|\\)(?:\!|\.|\^|\*)?[a-zA-Z0-9\_\-]+}
		Function-Prefix {(?:\n|\r|^)\s*(?:\$|\@|\&)[a-zA-Z0-9\_\-]+ (?=\[|takes)}
	}
	
	comments {
		Single-Line {(?:\n|\r|^)\s*#[^\n\r]*}
	}
	
	multi-line-comment {-/ -\\\\}
}

colors {
	basic {
		Default-Text DefaultText
		Default-Background DefaultBackground
		Default-Cursor DefaultCursor
	}
	
	keywords {
		Perl6-Keywords Keyword1
		Expressions Keyword2
		Keywords Keyword3
		Functions Function1
		Constants Constant1
		Special-Keywords Constant2
		Word-Operators Operator1
	}
	
	symbols {
		Operators Operator2
		Wrappers Operator3
	}
	
	numbers {
		Number Number1
	}
	
	strings {
		Double-Quoted String1
		Single-Quoted String1
		Dictionary-Key String1
	}
	
	regexes {
		Variable-Prefix Constant2
		Function-Prefix Keyword4
	}
	
	comments {
		Single-Line Comment1
	}
	
	multi-line-comment Comment1
}
